What happens when you initialize a repository? Why do you need to do it?

	the .git directory is created where the meta data is collected for the commits.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	The staging directory allow you to organize the files that are included in a commit. This is valuable because you can logically organize files that need to be tracked together.

How can you use the staging area to make sure you have one commit per logical change?

	You can add specific files to the staging area that make up a logical change. You do this by the Git add (file name) command. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	When you are creating something different to add to the general game such as a new feature, an experiment etc.

How do the diagrams help you visualize the branch structure?

	Diagrams show a visual structure to the main production branch and when new branches are created. Branches can also be created off of branch and the diagram allows you to see how each branch traces is way back to the main branch or parent.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	When you merge branches you are bringing the changes together into the master branch, thus "adding the feature". The changes are logged chronologically and result is that the color implemented in the main branch and the coins from the coins branch are now active in the main branch. Since the branches are merged, it is possible to see the commits from both branches.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

	Automatic merging is great when the changes on both branches to not conflict with each other. It is easy to bring them all together into one branch.

	A problem can occur if different changes to the same code in both branches or files. Git can not tell which code should be included in the final or merged code. This takes a decision by the person merging the branches or files.